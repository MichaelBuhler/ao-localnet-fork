name: ao-localnet

configs:
  ao-wallet:
    file: ./wallets/ao-wallet.json
  bundler-wallet:
    file: ./wallets/bundler-wallet.json
  ardrive-web-app-config:
    file: ./services/ardrive-web/app-config.json
  turbo-wallet:
    file: ./wallets/turbo-wallet.json

volumes:
  su:
  turbo:

services:
  arlocal:
    build:
      context: ./services/arlocal
      args:
        - REPO=https://github.com/MichaelBuhler/arlocal.git
        - BRANCH=main
    command: [
      "--persist",      # save the database to disk
      "--dbpath", "db", # in this folder
      "80",             # listen on port 80
    ]
    healthcheck:
      test: wget --spider http://localhost/info || exit 1
      start_period: 10s
      start_interval: 1s
    ports:
      - 4000:80
    volumes:
      - ./services/arlocal/data:/app/db

  ardrive-web:
    profiles: ["ardrive"]
    depends_on:
      arlocal:
        condition: service_healthy
    build: ./services/ardrive-web
    configs:
      - source: ardrive-web-app-config
        target: /usr/local/apache2/htdocs/assets/assets/config/dev.json
    ports:
      - 4001:80

  mu:
    build: ./services/mu
    configs:
      - source: ao-wallet
        target: /usr/app/ao-wallet.json
    env_file: ./services/mu/.env
    ports:
      - 4002:80

  su:
    depends_on:
      arlocal:
        condition: service_healthy
      su-database:
        condition: service_healthy
    build:
      context: https://github.com/permaweb/ao.git#main:servers/su
    entrypoint:
      - "/app/su" # su executable binary
      - "su"      # su mode (not router mode)
      - "80"      # listen on port 80
    configs:
      - source: ao-wallet
        target: /app/ao-wallet.json
    env_file: ./services/su/.env
    ports:
      - 4003:80

  su-database:
    image: postgres:17.4-bookworm
    environment:
      - POSTGRES_USER=su_user
      - POSTGRES_PASSWORD=su_pass
      - POSTGRES_DB=su_db
    healthcheck:
      test: pg_isready -U su_user -d su_db || exit 1
      start_period: 10s
      start_interval: 1s
    volumes:
      - su:/var/lib/postgresql/data

  cu:
    build: ./services/cu
    configs:
      - source: ao-wallet
        target: /usr/app/ao-wallet.json
    env_file: ./services/cu/.env
    ports:
      - 4004:80

  turbo:
    profiles: ["turbo"]
    depends_on:
      turbo-database:
        condition: service_healthy
    build: ./services/turbo
    configs:
      - source: turbo-wallet
        target: /usr/src/turbo-wallet.json
    env_file: ./services/turbo/.env
    ports:
      - 4005:80

  turbo-database:
    profiles: ["turbo"]
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: pg_isready -U postgres -d postgres || exit 1
      start_period: 10s
      start_interval: 1s
    volumes:
      - turbo:/var/lib/postgresql/data

  scar:
    depends_on:
      arlocal:
        condition: service_healthy
    build:
      context: ./services/scar
      args:
        - REPO=https://github.com/MichaelBuhler/scar.git
        - BRANCH=main
        - ARWEAVE_GATEWAY_URL=${GATEWAY_URL:-http://localhost:4000}
    ports:
      - 4006:80

  bundler:
    depends_on:
      arlocal:
        condition: service_healthy
    build: ./services/bundler
    configs:
      - source: bundler-wallet
        target: /app/bundler-wallet.json
    env_file: ./services/bundler/.env
    ports:
      - 4007:80

  lunar:
    build:
      context: https://github.com/permaweb/lunar.git#d89745b18799b9719f7db3984936c33974136d7e
      dockerfile_inline: |
        FROM node:22 AS builder
        COPY . /app
        WORKDIR /app
        RUN npm install
        RUN head -n 27 public/index.html > public/tmp.html
        RUN echo "</body></html>" >> public/tmp.html
        RUN mv public/tmp.html public/index.html
        RUN sed -i "s|getTxEndpoint(|'https://arweave.net/'+(|" src/helpers/config.ts
        RUN sed -i "s|https://arweave\.net|${GATEWAY_URL:-http://localhost:4000}|" src/helpers/endpoints.ts
        RUN sed -i "s|https://cu\.ao-testnet\.xyz|${CU_URL:-http://localhost:4004}|" src/components/molecules/ProcessRead/ProcessRead.tsx
        RUN sed -i "s|MODE: 'legacy'|MODE: 'legacy', GATEWAY_URL: '${GATEWAY_URL:-http://localhost:4000}', GRAPHQL_URL: '${GRAPHQL_URL:-http://localhost:4000/graphql}', CU_URL: '${CU_URL:-http://localhost:4004}', MU_URL: '${MU_URL:-http://localhost:4002}'|" src/providers/PermawebProvider.tsx
        RUN sed -i "s|AO Legacynet|${CLIENT:-Marshal} Cloudnet|" src/views/Landing/index.tsx
        RUN sed -i "s|<Metrics />||" src/views/Landing/index.tsx
        RUN find src -type f -exec sed -i "s|getGQLData({|getGQLData({ gateway: '${GRAPHQL_URL:-http://localhost:4000/graphql}',|" {} +
        RUN find node_modules/@permaweb/libs/dist -type f -exec sed -i "s|\`https://\$${\(.\.gateway\)}/graphql\`|\1|" {} +
        RUN find node_modules/@permaweb/libs/dist -type f -exec sed -i "s|https://up.arweave.net|${BUNDLER_URL:-http://localhost:4007}|" {} +
        RUN find node_modules/@permaweb/libs/dist -type f -exec sed -i "s|https://turbo.ardrive.io|${BUNDLER_URL:-http://localhost:4007}|" {} +
        RUN find node_modules/@permaweb/libs/dist -type f -exec sed -i "s|https://arweave.net|${GATEWAY_URL:-http://localhost:4000}|" {} +
        RUN npm run build

        FROM nginx:alpine
        COPY --from=builder /app/dist /usr/share/nginx/html
    ports:
      - 4008:80
